<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gluttonyIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>par_enemy3</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.2;
fallen = 0;
dir = -1
movespeed = 1.5;
grav = 0.2
hsp = 0;
vsp = 0;
hit = 0;
hp = 500;
global.alarmTriggered = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.triggerGluttony = false;
global.alarmTriggered = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fallen = 1;
alarm[2] = 15 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause) exit;

// Horizontal Movement
if self.x&lt;obj_playerPlaceHolder.x{self.dir=1}
if self.x&gt;obj_playerPlaceHolder.x{self.dir=-1}
image_xscale = dir;

// Gravity
vsp += grav;

//Horizontal Collision
if (place_meeting(x+hsp,y,par_tilesets))
{
    while(!place_meeting(x+sign(hsp),y,par_tilesets))
    {
        x += sign(hsp);
    }
    hsp = 0;
    
    dir *= -1;
}
x += hsp;

// Animation
if global.gluttonyTrigger = false //fallen = 0
{
    if(place_meeting(x,y+1,par_tilesets))
    {
        if(hsp!= 0) 
        {
        sprite_index = spr_gluttonyWalk;
        image_speed = 0.2;
        }
        if(hsp=0)
        {
        sprite_index = spr_gluttonyIdle;
        image_index = 0;
        image_speed = 0;
        }
    }
}
// Avoiding Ladders
if (place_meeting(x,y,par_ladder))
{
    dir *= -1;
}

// Avoiding Ledges
if (place_meeting(x,y,obj_ledge_hitbox))
{
    dir *= -1;
}
 
//Vertical Collision
if (place_meeting(x,y+vsp,par_tilesets))
{
    while(!place_meeting(x,y+sign(vsp),par_tilesets))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;
// Boss Logic
//====Tick
/*if global.gluttonyTrigger = true
{
alarm[1] = 10 * room_speed;
}
*/

if global.gluttonyTrigger = true //Handled by external trigger/alarm - If true, gluttony falls.
{
    sprite_index = spr_gluttonyFall;
    hsp = 0;
    vsp = 0;
    if (image_index &gt;= 5 &amp;&amp; image_index &lt;= 6)
    {
    image_index = 5;
    }
}


///Main Logic

//====Tick
if global.gluttonyTrigger = true // Damage handlers for if Gluttony has fallen.
{
    if (hit == 1)
    {
        sprite_index = spr_gluttonyFallenDamage;
        image_index = 0;
        hp = (hp - 1);
    }

    if (hit == 2)
    {
        sprite_index = spr_gluttonyFallenDamage;
        image_index = 0;
        hp = (hp - 5);
    }

    if (hit == 3)
    {
        sprite_index = spr_gluttonyFallenDamage;
        image_index = 0;
        hp = (hp - 3);
    }
}
if global.gluttonyTrigger = false // Damage handlers for if Gluttony has not fallen down
{
    if (hit == 1)
    {
        sprite_index = spr_gluttonyIdle;
        image_index = 0;
        if !audio_is_playing(snd_gluttonyGloop)
        {
            audio_play_sound(snd_gluttonyGloop,0,false);
        }
    }

    if (hit == 2)
    {
        sprite_index = spr_gluttonyIdle;
        image_index = 1;
        hp = (hp - 2.5);
    }

    if (hit == 3)
    {
        sprite_index = spr_gluttonyIdle;
        image_index = 1;
        hp = (hp - 1.5);
    }
}
   
if global.gluttonyTrigger = false//fallen = 0
{
    if (hit == 0)
    {
        hsp = dir * movespeed;
    }
}


if (hp &lt;= 0)
{
    instance_destroy();
    global.points = global.points + 100;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//What happens when enemy is hit
hit = 1;
alarm[0] = 15

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
