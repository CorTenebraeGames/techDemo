<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sword</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


// setting up what your menu functions will be



space = 64;
mpos = 0;

gamepad_set_axis_deadzone(0,0.6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause)exit;
//
menu[0] = ("Music Volume: " + string(global.musicVolumeSetting));
menu[1] = ("Effects Volume: " + string(global.SFXVolumeSetting));
menu[2] = ("Reset Settings");
menu[3] = ("Main Menu");

//getting the key inputs for the selection/movement process

var move = 0;
move =- max(keyboard_check_pressed(vk_up),keyboard_check_pressed(ord("w")),(gamepad_button_check_pressed(0,gp_padu)),0);
move += max(keyboard_check_pressed(vk_down),keyboard_check_pressed(ord("s")),(gamepad_button_check_pressed(0,gp_padd)),0);

if (move != 0)
{
    mpos += move;
    if (mpos &lt; 0) mpos = array_length_1d(menu) - 1;
    if(mpos &gt; array_length_1d(menu) -1)mpos = 0
    audio_play_sound(selection_sound,1,false);
}

global.musicVolumeSetting = clamp(global.musicVolumeSetting, 0, 10);
global.SFXVolumeSetting = clamp(global.SFXVolumeSetting, 0, 10);

// Music
if mpos = 0
{
    if ((keyboard_check_pressed(vk_left)) || (gamepad_button_check_pressed(0,gp_padl)))
    {
        global.musicVolumeSetting -= 1;
        scr_musicVolumeConfig();
        audio_play_sound(selection_sound, 0, false);
    }
    if ((keyboard_check_pressed(vk_right)) || (gamepad_button_check_pressed(0,gp_padr)))
    {
        global.musicVolumeSetting += 1;
        scr_musicVolumeConfig();
        audio_play_sound(selection_sound, 0, false);
    }
}
// SFX
if mpos = 1
{
    if ((keyboard_check_pressed(vk_left)) || (gamepad_button_check_pressed(0,gp_padl)))
    {
        global.SFXVolumeSetting -= 1;
        scr_SFXVolumeConfig();
        audio_play_sound(selection_sound, 0, false);
    }
    if ((keyboard_check_pressed(vk_right)) || (gamepad_button_check_pressed(0,gp_padr)))
    {
        global.SFXVolumeSetting += 1;
        scr_SFXVolumeConfig();
        audio_play_sound(selection_sound, 0, false);
    }
}

if mpos = 2
{
    if (keyboard_check_pressed(vk_enter))
    {
        global.SFXVolumeSetting = 10;
        global.musicVolumeSetting = 10;
        scr_musicVolumeConfig();
        scr_SFXVolumeConfig();
    }
}

if mpos = 3
{
    if (keyboard_check_pressed(vk_enter))
    {
        scr_saveAudioSettings();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>212</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>mus_sleeping</sound>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>dark_chill</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>mus_sleeping</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Drawing and aligning the menu selections

draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_text);
draw_set_color(c_white);


var m;
for(m = 0; m &lt; array_length_1d(menu); m+=1)
{
draw_text(512, 500 - 200 + (m * space),string(menu[m]))

}

draw_sprite(sprite_index, 0 ,512 - 200, 500 - 200 + mpos * space);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
