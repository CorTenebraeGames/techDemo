<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pride_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy3</parentName>
  <maskName>spr_pride_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initalize Variables
hsp = 0;
vsp = 0
grav = 5;
hp = 1000;
dir = -1;
movespeed = 1;
hit = 0;
alarm [1] = 900;
alarm [3] = irandom_range(700,1200);
sight = 800;

sprite_index = spr_pride_upper;
image_speed = 0.7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Changing Direction
dir *= -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damaging the Player
//Double checks to see if player is blocking, still in range, and "seeing eye" is active
if ((sight &gt;= abs(x - obj_playerPlaceHolder.x)) &amp;&amp; (sign(obj_playerPlaceHolder.x - x) = sign(dir)) &amp;&amp; abs(y-obj_playerPlaceHolder.y) &lt; (sprite_height/2))
{   
    if (sprite_index != spr_pride_lower)
    {
        if (obj_playerPlaceHolder.sprite_index != spr_block)
        {
            global.playerHp -= 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index = spr_pride_upper)
{
    image_speed = 0.5;
    movespeed = 0;
    sprite_index = spr_pride_lower;
    alarm[1] = irandom_range(240,300);
}
else 
{
    image_speed = 0.7;
    movespeed = 1;
    sprite_index = spr_pride_upper;
    image_index = 0;
    alarm [1] = irandom_range(600,900);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = 0;
if (sprite_index = spr_upper_DMG)
{
    sprite_index = spr_pride_upper;
}
else
{  
    sprite_index = spr_pride_lower;
    image_index = 23;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;

image_xscale = dir;
//Gravity
if (vsp &lt; 5)
{
    vsp += grav;
}
//Horizontal Collision
if (place_meeting(x+hsp,y,par_tilesets))
{
    while(!place_meeting(x+(hsp),y,par_tilesets))
    {
        x += sign(hsp)
    }
    hsp = 0;
    
    dir *= -1;
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,par_tilesets))
{
    while(!place_meeting(x,y+(vsp),par_tilesets))
    {
        y += sign(vsp)
    }
    vsp = 0;
}
y += vsp;

//Damage done by "seeing eye"
if ((sight &gt;= abs(x - obj_playerPlaceHolder.x)) &amp;&amp; (sign(obj_playerPlaceHolder.x - x) = sign(dir)) &amp;&amp; abs(y-obj_playerPlaceHolder.y) &lt; (sprite_height/2))
{   
    if (sprite_index != spr_pride_lower)
    {
        if (alarm[2] = -1)
        { 
            alarm[2] = 30;
            if (!audio_is_playing(snd_pride_detected))
            {
                audio_play_sound(snd_pride_detected,0,false)
            }
        }
    }
}

//Keeping Pride knelt
if ((sprite_index = spr_pride_lower) &amp;&amp; (image_index &gt;= 23 &amp;&amp; image_index &lt;= 24))
    {
        image_index = 23;   
    }
//Main Logic
//=====Tick

if (hit == 1)
{
    audio_play_sound(snd_gluttonyDmg,0,false);
    if (sprite_index = spr_pride_upper)
    {
        hp -= 1;
        sprite_index = spr_upper_DMG;
        image_xscale = dir;
    }
    if (sprite_index = spr_pride_lower)
    {
        hp -= 5;
        sprite_index = spr_pride_lower_DMG;
        image_xscale = dir;
    }
}

if (hit == 2)
{
    audio_play_sound(snd_gluttonyDmg,0,false);
     if (sprite_index = spr_pride_upper)
    {
        hp -= 5;
        sprite_index = spr_upper_DMG;
        image_xscale = dir;
    }
    if (sprite_index = spr_pride_lower)
    {
        hp -= 25;
        sprite_index = spr_pride_lower_DMG;
        image_xscale = dir;
    }
}

if (hit == 3)
{
    audio_play_sound(snd_gluttonyDmg,0,false);
     if (sprite_index = spr_pride_upper)
    {
        hp -= 3;
        sprite_index = spr_upper_DMG;
        image_xscale = dir;
    }
    if (sprite_index = spr_pride_lower)
    {
        hp -= 15;
        sprite_index = spr_pride_lower_DMG;
        image_xscale = dir;
    }
}

if (hit == 0)
{
    hsp = movespeed * dir;
}

//Dying
if (hp &lt;= 0)
{
    instance_destroy();
    global.points += 500;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = 1;

if (sprite_index = spr_pride_upper)
{
    vsp = -1;
    hsp = sign(x - obj_playerPlaceHolder.x)* 2;
}
alarm[0] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shrapnel">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Getting hit by grenade shrapnel
hit = 3;
vsp= -3;
hsp = sign(x - obj_playerPlaceHolder.x)*4;
image_xscale = sign (hsp);
alarm[0] = 15
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_grenade">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Getting hit by the actual grenade
hit = 2;
vsp= -4;
hsp = sign(x - obj_playerPlaceHolder.x)*5;
image_xscale = sign (hsp);
alarm[0] = 15
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
