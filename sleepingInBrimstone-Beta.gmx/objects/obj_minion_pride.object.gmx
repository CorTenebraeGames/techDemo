<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pride_org</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
hsp = 0;
dir = -1;
movespeed = 2;
vsp = 0;
grav = 0.1;
sight = 350;
alarm[1] = irandom_range(120,240);
hp = 20;
hit = 0;

image_speed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damaging the player
//Double checking that player is still in range
if ((sight &gt; x - obj_playerPlaceHolder.x) &amp;&amp; (sign(obj_playerPlaceHolder.x - x) = sign(dir)) &amp;&amp; abs(y-obj_playerPlaceHolder.y) &lt; (sprite_height/2))
{
    if (obj_playerPlaceHolder.sprite_index != spr_block)
    {
        global.playerHp -= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch direction
if (global.pause) exit;

dir *= -1;
image_xscale *= -1;
alarm[1] = irandom_range(120,240);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.pause) exit;

//Horizontal Collision
image_xscale = dir;

if (place_meeting(x+hsp,y,par_tilesets))
{
    while(!place_meeting(x+sign(hsp),y,par_tilesets))
    {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,par_tilesets))
{    
    while(!place_meeting(x,y+sign(vsp),par_tilesets))
    {
        y += sign(vsp);
    } 
        vsp = 0;       
}
y += vsp;

//Gravity
if (vsp &lt; 5) vsp += grav;

//Avoiding Ledges
//^^^^^^Working to change so that we can eliminate the ledge hitbox object eventually
if (position_meeting(x+(sprite_width/2),y,obj_ledge_hitbox))
{
    movespeed = 0;
}
else
{
    movespeed = 2;
}
//Gravity
vsp += grav;

//Doing damage to the player if they are in range &amp;&amp; minion is looking at them &amp;&amp; they're on level plane
//Actual Damage code is in the alarm
if ((sight &gt;= abs(x - obj_playerPlaceHolder.x)) &amp;&amp; (sign(obj_playerPlaceHolder.x - x) = sign(dir)) &amp;&amp; abs(y-obj_playerPlaceHolder.y) &lt; (sprite_height/2))
{   
    if (alarm[2] = -1)
    { 
        alarm[2] = 60;
        if (!audio_is_playing(snd_pride_detected))
        {
            audio_play_sound(snd_pride_detected,0,false)
        }
    }
}
//Main Logic

//====Tick
if (hit == 1)
{
    hp -= 1;
}
if (hit == 2)
{
    hp -= 5;
}
if (hit == 3)
{
    hp -= 3;
}
if (hit == 0)
{
    hsp = dir * movespeed;
}

//Dying
if (hp &lt;= 0) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = 1;
vsp = -3;
hsp = sign(x - obj_playerPlaceHolder.x)*4;
if (!audio_is_playing(snd_gluttonyDmg))
{
    audio_play_sound(snd_gluttonyDmg,0,false);
}
alarm[0] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
