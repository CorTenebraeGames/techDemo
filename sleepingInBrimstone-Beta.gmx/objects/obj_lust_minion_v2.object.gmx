<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_envyIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>par_enemy2</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;

dir = -1
movespeed = 5;
grav = 0.2
hsp = 0;
vsp = 0;
hit = 0;
hp = 100;
blockingPhase = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blockingPhase = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>blockingPhase = true;

alarm[2] = 1 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause) exit;

// Horizontal Movement
if ((distance_to_object(obj_playerPlaceHolder) &lt; 250) &amp;&amp; (hit == 0))
{
    // Tracking Player
    if self.x&lt;obj_playerPlaceHolder.x{self.dir=1}
    if self.x&gt;obj_playerPlaceHolder.x{self.dir=-1}
    image_speed = 0.2;
    if ((distance_to_object((obj_playerPlaceHolder) &gt; 100)) &amp;&amp; (distance_to_object(obj_playerPlaceHolder) &lt; 250) &amp;&amp; (hit == 0) &amp;&amp; (blockingPhase = false))
    {
        movespeed = 3.5;
        sprite_index = spr_envyRun;
    }
}
/*
if ((distance_to_object((obj_playerPlaceHolder) = 9 )))
{
image_index = 0;
}
*/
// Attacking Anim =======
if ((distance_to_object(obj_playerPlaceHolder) &lt; 1))
{
    movespeed = 0;
    sprite_index = spr_envyAttack
    image_speed = 0.1;
    if (image_index &gt; 0) &amp;&amp; (image_index &lt;= 1)
    {
        with(instance_create(x,y,par_envy_hitbox))
        {
            image_xscale=other.image_xscale
        }
    }
    /*
    if (distance_to_object(obj_playerPlaceHolder) &gt; 0.95)
    {
        if (image_index &gt; 8) &amp;&amp; (image_index &lt;= 8.5)
        {
            image_index = 0
        }
    }
    */
}
//=========

// Idle Animation
if distance_to_object(obj_playerPlaceHolder) &gt; 250
{
    movespeed = 0;
    image_speed = 0;
    sprite_index = spr_envyIdle;
}

image_xscale = dir;

// Gravity
vsp += grav;

//Horizontal Collision
if (place_meeting(x+hsp,y,par_tilesets))
{
    while(!place_meeting(x+sign(hsp),y,par_tilesets))
    {
        x += sign(hsp);
    }
    hsp = 0;
    
    dir *= -1;
}
if (place_meeting(x+hsp,y,obj_lust_minion_v2) &amp;&amp; distance_to_object(obj_playerPlaceHolder) &gt; 1 &amp;&amp; hit == 0) 
{
    while(!place_meeting(x+sign(hsp),y,obj_lust_minion_v2))
    {
        x += sign(hsp);
    }
//    hsp = 0;
reverseDir = dir * -1
  hsp = choose(reverseDir * 2, reverseDir * 5, reverseDir * 10);
}
x += hsp;

/*
// Enemy Collision
if (place_meeting(x,y,obj_playerPlaceHolder))
{
    //dir *= -1;
}
*/
 
//Vertical Collision
if (place_meeting(x,y+vsp,par_tilesets))
{
    while(!place_meeting(x,y+sign(vsp),par_tilesets))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

/*
//Animation
if(place_meeting(x,y+1,par_tilesets))
{
        image_speed = 0.2;
}
*/

if blockingPhase = true
{
    sprite_index = spr_envyBlock
    movespeed = 0;
}

///Main Logic

//====Tick

if (hit == 1)
{
    if blockingPhase = false
    {
        sprite_index = spr_envyDmg
        hp = (hp - 1);
        alarm[1]= 0.5 * room_speed;
    }
    if blockingPhase = true
    {
        if !audio_is_playing(snd_shieldBlock)
        {
            audio_play_sound(snd_shieldBlock,0,false);
        }
    }
}

if (hit == 2)
{
    sprite_index = spr_envyDmg
    hp = (hp - 5);
}

if (hit == 3)
{
    sprite_index = spr_envyDmg
    hp = (hp - 3);
}
   
if (hit == 0)
{
    hsp = dir * movespeed;
}

if (hp &lt;= 0)
{
    instance_destroy();
    global.points = global.points + 10;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hitbox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//What happens when enemy is hit
if blockingPhase = false
{
hit = 1;
vsp= -3;
hsp = sign(x - obj_playerPlaceHolder.x)*4;
image_xscale = sign (hsp);
alarm[0] = 15
if !audio_is_playing(snd_gluttonyDmg)
{
    audio_play_sound(snd_gluttonyDmg, 0, false)
}
}
if blockingPhase = true
{
    if !audio_is_playing(snd_shieldBlock)
    {
        audio_play_sound(snd_shieldBlock,0,false);
    }
}
else
{
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
