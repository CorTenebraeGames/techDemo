<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if !object_exists(obj_playerPlaceHolder)
{
    instance_create(global.saveXLocation, global.saveYLocation, obj_playerPlaceHolder);
}
else
{
}
*/
// CREATION OF PERSISTENT HUD ELEMENTS SHOULD BE HANDLED BY A GLOBAL VARIABLE INITIALIZED WHEN GAME IS LOADED
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.playerIsAlive = 0
{
    room_goto(room_Dead);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// New Health
switch(global.playerHp)
{
    case 18:
    {
        draw_sprite(player_hp, 18,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }
    case 17:
    {
        draw_sprite(player_hp, 17,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }
    case 16:
    {
        draw_sprite(player_hp, 16,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }
    case 15:
    {
        draw_sprite(player_hp, 15,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 14:
    {
        draw_sprite(player_hp, 14,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 13:
    {
        draw_sprite(player_hp, 13,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 12:
    {
        draw_sprite(player_hp, 12,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 11:
    {
        draw_sprite(player_hp, 11,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 10:
    {
        draw_sprite(player_hp, 10,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }
    case 9:
    {
        draw_sprite(player_hp, 9,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 8:
    {
        draw_sprite(player_hp, 8,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 7:
    {
        draw_sprite(player_hp, 7,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 6:
    {
        draw_sprite(player_hp, 6,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 5:
    {
        draw_sprite(player_hp, 5,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 4:
    {
        draw_sprite(player_hp, 4,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 3:
    {
        draw_sprite(player_hp, 3,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 2:
    {
        draw_sprite(player_hp, 2,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 1:
    {
        draw_sprite(player_hp, 1,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }   
    case 0:
    {
        draw_sprite(player_hp, 0,(view_wview[0]-560),view_hview[0] - 535);
        break;
    }      
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Score HUD
draw_set_color(c_white);
draw_set_font(fnt_text);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text((view_wview[0]+115),view_hview[0] - 535,("Score: " + string(global.points)) );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Holy Water
draw_set_color(c_white);
draw_set_font(fnt_text);
draw_set_halign(fa_center);
draw_set_valign(fa_top);
draw_text((view_wview[0]-670),view_hview[0] - 500,("Water x" + string(global.holyWater)) );
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Key Display HUD
// If key is obtained THIS will display on HUD
if (global.keyObtained = 1)
{
    draw_sprite_ext(spr_key, 0,(view_wview[0]-300),(view_hview[0] - 535), 2, 2, 0, c_white, 1)
}

//If key is used or not obtained, THIS WILL TURN INVISIBLE
if (global.keyObtained = 0)
{
    draw_sprite_ext(spr_key, 0,(view_wview[0]-300),(view_hview[0] - 535), 2, 2, 0, c_white, 0)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
